<?php
/**
 * AdresInOnderzoek
 *
 * PHP version 5
 *
 * @category Class
 * @package  Kadaster\BagApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * IMBAG API - van de LVBAG
 *
 * Dit is de [BAG API](https://zakelijk.kadaster.nl/-/bag-api) Individuele Bevragingen van de Landelijke Voorziening Basisregistratie Adressen en Gebouwen (LVBAG).  Meer informatie over de Basisregistratie Adressen en Gebouwen is te vinden op de website van het [Ministerie van Binnenlandse Zaken en Koninkrijksrelaties](https://www.geobasisregistraties.nl/basisregistraties/adressen-en-gebouwen) en [Kadaster](https://zakelijk.kadaster.nl/bag).  De BAG API levert informatie conform de [BAG Catalogus 2018](https://www.geobasisregistraties.nl/documenten/publicatie/2018/03/12/catalogus-2018) en het informatiemodel IMBAG 2.0. De API specificatie volgt de [Nederlandse API-Strategie](https://docs.geostandaarden.nl/api/API-Strategie) specificatie versie van 20200204 en is opgesteld in [OpenAPI Specificatie](https://www.forumstandaardisatie.nl/standaard/openapi-specification) (OAS) v3.  Het standaard mediatype HAL (`application/hal+json`) wordt gebruikt. Dit is een mediatype voor het weergeven van resources en hun relaties via hyperlinks.  Deze API is vooral gericht op individuele bevragingen (op basis van de identificerende gegevens van een object). Om gebruik te kunnen maken van de BAG API is een API key nodig, deze kan verkregen worden door het [aanvraagformulier](https://formulieren.kadaster.nl/aanvraag_bag_api_individuele_bevragingen_productie) in te vullen.  Voor vragen, neem contact op met de LVBAG beheerder o.v.v. BAG API 2.0. We zijn aan het kijken naar een geschikt medium hiervoor, mede ook om de API iteratief te kunnen opstellen of doorontwikkelen samen met de community. Als de API iets (nog) niet kan, wat u wel graag wilt, neem dan contact op.
 *
 * OpenAPI spec version: 2.9.2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.54
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Kadaster\BagApiClient\Model;

use \ArrayAccess;
use \Kadaster\BagApiClient\ObjectSerializer;

/**
 * AdresInOnderzoek Class Doc Comment
 *
 * @category Class
 * @description Wanneer hier een property is opgenomen met de waarde true, dan is de waarde van het gelijknamige property in de resource in onderzoek. De juistheid van dit gegeven wordt op dit moment onderzocht. Onder property toelichting wordt toegelicht wat er mogelijk onjuist is aan het betreffende gegeven.
 * @package  Kadaster\BagApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AdresInOnderzoek implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AdresInOnderzoek';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'openbare_ruimte_naam' => 'bool',
        'korte_naam' => 'bool',
        'huisnummer' => 'bool',
        'huisletter' => 'bool',
        'huisnummertoevoeging' => 'bool',
        'postcode' => 'bool',
        'woonplaats_naam' => 'bool',
        'openbare_ruimte_ligt_in' => 'bool',
        'openbare_ruimte_status' => 'bool',
        'nummeraanduiding_ligt_in' => 'bool',
        'nummeraanduidingligt_aan' => 'bool',
        'nummeraanduiding_status' => 'bool',
        'toelichting' => 'string[]',
        'adresregel5' => 'bool',
        'adresregel6' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'openbare_ruimte_naam' => null,
        'korte_naam' => null,
        'huisnummer' => null,
        'huisletter' => null,
        'huisnummertoevoeging' => null,
        'postcode' => null,
        'woonplaats_naam' => null,
        'openbare_ruimte_ligt_in' => null,
        'openbare_ruimte_status' => null,
        'nummeraanduiding_ligt_in' => null,
        'nummeraanduidingligt_aan' => null,
        'nummeraanduiding_status' => null,
        'toelichting' => null,
        'adresregel5' => null,
        'adresregel6' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'openbare_ruimte_naam' => 'openbareRuimteNaam',
        'korte_naam' => 'korteNaam',
        'huisnummer' => 'huisnummer',
        'huisletter' => 'huisletter',
        'huisnummertoevoeging' => 'huisnummertoevoeging',
        'postcode' => 'postcode',
        'woonplaats_naam' => 'woonplaatsNaam',
        'openbare_ruimte_ligt_in' => 'openbareRuimteLigtIn',
        'openbare_ruimte_status' => 'openbareRuimteStatus',
        'nummeraanduiding_ligt_in' => 'nummeraanduidingLigtIn',
        'nummeraanduidingligt_aan' => 'nummeraanduidingligtAan',
        'nummeraanduiding_status' => 'nummeraanduidingStatus',
        'toelichting' => 'toelichting',
        'adresregel5' => 'adresregel5',
        'adresregel6' => 'adresregel6'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'openbare_ruimte_naam' => 'setOpenbareRuimteNaam',
        'korte_naam' => 'setKorteNaam',
        'huisnummer' => 'setHuisnummer',
        'huisletter' => 'setHuisletter',
        'huisnummertoevoeging' => 'setHuisnummertoevoeging',
        'postcode' => 'setPostcode',
        'woonplaats_naam' => 'setWoonplaatsNaam',
        'openbare_ruimte_ligt_in' => 'setOpenbareRuimteLigtIn',
        'openbare_ruimte_status' => 'setOpenbareRuimteStatus',
        'nummeraanduiding_ligt_in' => 'setNummeraanduidingLigtIn',
        'nummeraanduidingligt_aan' => 'setNummeraanduidingligtAan',
        'nummeraanduiding_status' => 'setNummeraanduidingStatus',
        'toelichting' => 'setToelichting',
        'adresregel5' => 'setAdresregel5',
        'adresregel6' => 'setAdresregel6'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'openbare_ruimte_naam' => 'getOpenbareRuimteNaam',
        'korte_naam' => 'getKorteNaam',
        'huisnummer' => 'getHuisnummer',
        'huisletter' => 'getHuisletter',
        'huisnummertoevoeging' => 'getHuisnummertoevoeging',
        'postcode' => 'getPostcode',
        'woonplaats_naam' => 'getWoonplaatsNaam',
        'openbare_ruimte_ligt_in' => 'getOpenbareRuimteLigtIn',
        'openbare_ruimte_status' => 'getOpenbareRuimteStatus',
        'nummeraanduiding_ligt_in' => 'getNummeraanduidingLigtIn',
        'nummeraanduidingligt_aan' => 'getNummeraanduidingligtAan',
        'nummeraanduiding_status' => 'getNummeraanduidingStatus',
        'toelichting' => 'getToelichting',
        'adresregel5' => 'getAdresregel5',
        'adresregel6' => 'getAdresregel6'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['openbare_ruimte_naam'] = isset($data['openbare_ruimte_naam']) ? $data['openbare_ruimte_naam'] : null;
        $this->container['korte_naam'] = isset($data['korte_naam']) ? $data['korte_naam'] : null;
        $this->container['huisnummer'] = isset($data['huisnummer']) ? $data['huisnummer'] : null;
        $this->container['huisletter'] = isset($data['huisletter']) ? $data['huisletter'] : null;
        $this->container['huisnummertoevoeging'] = isset($data['huisnummertoevoeging']) ? $data['huisnummertoevoeging'] : null;
        $this->container['postcode'] = isset($data['postcode']) ? $data['postcode'] : null;
        $this->container['woonplaats_naam'] = isset($data['woonplaats_naam']) ? $data['woonplaats_naam'] : null;
        $this->container['openbare_ruimte_ligt_in'] = isset($data['openbare_ruimte_ligt_in']) ? $data['openbare_ruimte_ligt_in'] : null;
        $this->container['openbare_ruimte_status'] = isset($data['openbare_ruimte_status']) ? $data['openbare_ruimte_status'] : null;
        $this->container['nummeraanduiding_ligt_in'] = isset($data['nummeraanduiding_ligt_in']) ? $data['nummeraanduiding_ligt_in'] : null;
        $this->container['nummeraanduidingligt_aan'] = isset($data['nummeraanduidingligt_aan']) ? $data['nummeraanduidingligt_aan'] : null;
        $this->container['nummeraanduiding_status'] = isset($data['nummeraanduiding_status']) ? $data['nummeraanduiding_status'] : null;
        $this->container['toelichting'] = isset($data['toelichting']) ? $data['toelichting'] : null;
        $this->container['adresregel5'] = isset($data['adresregel5']) ? $data['adresregel5'] : null;
        $this->container['adresregel6'] = isset($data['adresregel6']) ? $data['adresregel6'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets openbare_ruimte_naam
     *
     * @return bool
     */
    public function getOpenbareRuimteNaam()
    {
        return $this->container['openbare_ruimte_naam'];
    }

    /**
     * Sets openbare_ruimte_naam
     *
     * @param bool $openbare_ruimte_naam openbare_ruimte_naam
     *
     * @return $this
     */
    public function setOpenbareRuimteNaam($openbare_ruimte_naam)
    {
        $this->container['openbare_ruimte_naam'] = $openbare_ruimte_naam;

        return $this;
    }

    /**
     * Gets korte_naam
     *
     * @return bool
     */
    public function getKorteNaam()
    {
        return $this->container['korte_naam'];
    }

    /**
     * Sets korte_naam
     *
     * @param bool $korte_naam korte_naam
     *
     * @return $this
     */
    public function setKorteNaam($korte_naam)
    {
        $this->container['korte_naam'] = $korte_naam;

        return $this;
    }

    /**
     * Gets huisnummer
     *
     * @return bool
     */
    public function getHuisnummer()
    {
        return $this->container['huisnummer'];
    }

    /**
     * Sets huisnummer
     *
     * @param bool $huisnummer huisnummer
     *
     * @return $this
     */
    public function setHuisnummer($huisnummer)
    {
        $this->container['huisnummer'] = $huisnummer;

        return $this;
    }

    /**
     * Gets huisletter
     *
     * @return bool
     */
    public function getHuisletter()
    {
        return $this->container['huisletter'];
    }

    /**
     * Sets huisletter
     *
     * @param bool $huisletter huisletter
     *
     * @return $this
     */
    public function setHuisletter($huisletter)
    {
        $this->container['huisletter'] = $huisletter;

        return $this;
    }

    /**
     * Gets huisnummertoevoeging
     *
     * @return bool
     */
    public function getHuisnummertoevoeging()
    {
        return $this->container['huisnummertoevoeging'];
    }

    /**
     * Sets huisnummertoevoeging
     *
     * @param bool $huisnummertoevoeging huisnummertoevoeging
     *
     * @return $this
     */
    public function setHuisnummertoevoeging($huisnummertoevoeging)
    {
        $this->container['huisnummertoevoeging'] = $huisnummertoevoeging;

        return $this;
    }

    /**
     * Gets postcode
     *
     * @return bool
     */
    public function getPostcode()
    {
        return $this->container['postcode'];
    }

    /**
     * Sets postcode
     *
     * @param bool $postcode postcode
     *
     * @return $this
     */
    public function setPostcode($postcode)
    {
        $this->container['postcode'] = $postcode;

        return $this;
    }

    /**
     * Gets woonplaats_naam
     *
     * @return bool
     */
    public function getWoonplaatsNaam()
    {
        return $this->container['woonplaats_naam'];
    }

    /**
     * Sets woonplaats_naam
     *
     * @param bool $woonplaats_naam woonplaats_naam
     *
     * @return $this
     */
    public function setWoonplaatsNaam($woonplaats_naam)
    {
        $this->container['woonplaats_naam'] = $woonplaats_naam;

        return $this;
    }

    /**
     * Gets openbare_ruimte_ligt_in
     *
     * @return bool
     */
    public function getOpenbareRuimteLigtIn()
    {
        return $this->container['openbare_ruimte_ligt_in'];
    }

    /**
     * Sets openbare_ruimte_ligt_in
     *
     * @param bool $openbare_ruimte_ligt_in \"Als de nummeraanduidingLigtIn false is (deze is niet in onderzoek) en de openbareRuimteLigtIn is true (deze is wel in onderzoek) maar is gerelateerd aan een andere woonplaats dan de nummeraanduiding,  dan wordt de boolean hier niet gezet. Deze is dan niet relevant omdat dan de woonplaats wordt gebruikt die gerelateerd is aan de nummeraanduiding.\"
     *
     * @return $this
     */
    public function setOpenbareRuimteLigtIn($openbare_ruimte_ligt_in)
    {
        $this->container['openbare_ruimte_ligt_in'] = $openbare_ruimte_ligt_in;

        return $this;
    }

    /**
     * Gets openbare_ruimte_status
     *
     * @return bool
     */
    public function getOpenbareRuimteStatus()
    {
        return $this->container['openbare_ruimte_status'];
    }

    /**
     * Sets openbare_ruimte_status
     *
     * @param bool $openbare_ruimte_status openbare_ruimte_status
     *
     * @return $this
     */
    public function setOpenbareRuimteStatus($openbare_ruimte_status)
    {
        $this->container['openbare_ruimte_status'] = $openbare_ruimte_status;

        return $this;
    }

    /**
     * Gets nummeraanduiding_ligt_in
     *
     * @return bool
     */
    public function getNummeraanduidingLigtIn()
    {
        return $this->container['nummeraanduiding_ligt_in'];
    }

    /**
     * Sets nummeraanduiding_ligt_in
     *
     * @param bool $nummeraanduiding_ligt_in nummeraanduiding_ligt_in
     *
     * @return $this
     */
    public function setNummeraanduidingLigtIn($nummeraanduiding_ligt_in)
    {
        $this->container['nummeraanduiding_ligt_in'] = $nummeraanduiding_ligt_in;

        return $this;
    }

    /**
     * Gets nummeraanduidingligt_aan
     *
     * @return bool
     */
    public function getNummeraanduidingligtAan()
    {
        return $this->container['nummeraanduidingligt_aan'];
    }

    /**
     * Sets nummeraanduidingligt_aan
     *
     * @param bool $nummeraanduidingligt_aan nummeraanduidingligt_aan
     *
     * @return $this
     */
    public function setNummeraanduidingligtAan($nummeraanduidingligt_aan)
    {
        $this->container['nummeraanduidingligt_aan'] = $nummeraanduidingligt_aan;

        return $this;
    }

    /**
     * Gets nummeraanduiding_status
     *
     * @return bool
     */
    public function getNummeraanduidingStatus()
    {
        return $this->container['nummeraanduiding_status'];
    }

    /**
     * Sets nummeraanduiding_status
     *
     * @param bool $nummeraanduiding_status nummeraanduiding_status
     *
     * @return $this
     */
    public function setNummeraanduidingStatus($nummeraanduiding_status)
    {
        $this->container['nummeraanduiding_status'] = $nummeraanduiding_status;

        return $this;
    }

    /**
     * Gets toelichting
     *
     * @return string[]
     */
    public function getToelichting()
    {
        return $this->container['toelichting'];
    }

    /**
     * Sets toelichting
     *
     * @param string[] $toelichting toelichting
     *
     * @return $this
     */
    public function setToelichting($toelichting)
    {
        $this->container['toelichting'] = $toelichting;

        return $this;
    }

    /**
     * Gets adresregel5
     *
     * @return bool
     */
    public function getAdresregel5()
    {
        return $this->container['adresregel5'];
    }

    /**
     * Sets adresregel5
     *
     * @param bool $adresregel5 adresregel5
     *
     * @return $this
     */
    public function setAdresregel5($adresregel5)
    {
        $this->container['adresregel5'] = $adresregel5;

        return $this;
    }

    /**
     * Gets adresregel6
     *
     * @return bool
     */
    public function getAdresregel6()
    {
        return $this->container['adresregel6'];
    }

    /**
     * Sets adresregel6
     *
     * @param bool $adresregel6 adresregel6
     *
     * @return $this
     */
    public function setAdresregel6($adresregel6)
    {
        $this->container['adresregel6'] = $adresregel6;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
