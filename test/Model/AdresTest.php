<?php
/**
 * AdresTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Kadaster\BagApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * IMBAG API - van de LVBAG
 *
 * Dit is de [BAG API](https://zakelijk.kadaster.nl/-/bag-api) Individuele Bevragingen van de Landelijke Voorziening Basisregistratie Adressen en Gebouwen (LVBAG).  Meer informatie over de Basisregistratie Adressen en Gebouwen is te vinden op de website van het [Ministerie van Binnenlandse Zaken en Koninkrijksrelaties](https://www.geobasisregistraties.nl/basisregistraties/adressen-en-gebouwen) en [Kadaster](https://zakelijk.kadaster.nl/bag).  De BAG API levert informatie conform de [BAG Catalogus 2018](https://www.geobasisregistraties.nl/documenten/publicatie/2018/03/12/catalogus-2018) en het informatiemodel IMBAG 2.0. De API specificatie volgt de [Nederlandse API-Strategie](https://docs.geostandaarden.nl/api/API-Strategie) specificatie versie van 20200204 en is opgesteld in [OpenAPI Specificatie](https://www.forumstandaardisatie.nl/standaard/openapi-specification) (OAS) v3.  Het standaard mediatype HAL (`application/hal+json`) wordt gebruikt. Dit is een mediatype voor het weergeven van resources en hun relaties via hyperlinks.  Deze API is vooral gericht op individuele bevragingen (op basis van de identificerende gegevens van een object). Om gebruik te kunnen maken van de BAG API is een API key nodig, deze kan verkregen worden door het [aanvraagformulier](https://formulieren.kadaster.nl/aanvraag_bag_api_individuele_bevragingen_productie) in te vullen.  Voor vragen, neem contact op met de LVBAG beheerder o.v.v. BAG API 2.0. We zijn aan het kijken naar een geschikt medium hiervoor, mede ook om de API iteratief te kunnen opstellen of doorontwikkelen samen met de community. Als de API iets (nog) niet kan, wat u wel graag wilt, neem dan contact op.
 *
 * OpenAPI spec version: 2.9.2
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.54
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Kadaster\BagApiClient;

use PHPUnit\Framework\TestCase;

/**
 * AdresTest Class Doc Comment
 *
 * @category    Class
 * @description Door het bevoegde gemeentelijke orgaan aan een verblijfsobject, een  standplaats of een ligplaats toegekende benaming, bestaande uit een  combinatie van de naam van een openbare ruimte, het huisnummer, een  eventuele huisletter en huisnummertoevoeging van de nummeraanduiding  en de naam van de woonplaats.
 * @package     Kadaster\BagApiClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class AdresTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Adres"
     */
    public function testAdres()
    {
    }

    /**
     * Test attribute "openbare_ruimte_naam"
     */
    public function testPropertyOpenbareRuimteNaam()
    {
    }

    /**
     * Test attribute "korte_naam"
     */
    public function testPropertyKorteNaam()
    {
    }

    /**
     * Test attribute "huisnummer"
     */
    public function testPropertyHuisnummer()
    {
    }

    /**
     * Test attribute "huisletter"
     */
    public function testPropertyHuisletter()
    {
    }

    /**
     * Test attribute "huisnummertoevoeging"
     */
    public function testPropertyHuisnummertoevoeging()
    {
    }

    /**
     * Test attribute "postcode"
     */
    public function testPropertyPostcode()
    {
    }

    /**
     * Test attribute "woonplaats_naam"
     */
    public function testPropertyWoonplaatsNaam()
    {
    }

    /**
     * Test attribute "nummeraanduiding_identificatie"
     */
    public function testPropertyNummeraanduidingIdentificatie()
    {
    }

    /**
     * Test attribute "openbare_ruimte_identificatie"
     */
    public function testPropertyOpenbareRuimteIdentificatie()
    {
    }

    /**
     * Test attribute "woonplaats_identificatie"
     */
    public function testPropertyWoonplaatsIdentificatie()
    {
    }

    /**
     * Test attribute "adresseerbaar_object_identificatie"
     */
    public function testPropertyAdresseerbaarObjectIdentificatie()
    {
    }

    /**
     * Test attribute "pand_identificaties"
     */
    public function testPropertyPandIdentificaties()
    {
    }

    /**
     * Test attribute "indicatie_nevenadres"
     */
    public function testPropertyIndicatieNevenadres()
    {
    }

    /**
     * Test attribute "adresregel5"
     */
    public function testPropertyAdresregel5()
    {
    }

    /**
     * Test attribute "adresregel6"
     */
    public function testPropertyAdresregel6()
    {
    }
}
