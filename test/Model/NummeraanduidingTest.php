<?php
/**
 * NummeraanduidingTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Kadaster\BagApiClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * IMBAG API - van de LVBAG
 *
 * Dit is de [BAG API](https://zakelijk.kadaster.nl/-/bag-api) Individuele Bevragingen van de Landelijke Voorziening Basisregistratie Adressen en Gebouwen (LVBAG).  Meer informatie over de Basisregistratie Adressen en Gebouwen is te vinden op de website van het [Ministerie van Binnenlandse Zaken en Koninkrijksrelaties](https://www.geobasisregistraties.nl/basisregistraties/adressen-en-gebouwen) en [Kadaster](https://zakelijk.kadaster.nl/bag).  De BAG API levert informatie conform de [BAG Catalogus 2018](https://www.geobasisregistraties.nl/documenten/publicatie/2018/03/12/catalogus-2018) en het informatiemodel IMBAG 2.0. De API specificatie volgt de [Nederlandse API-Strategie](https://docs.geostandaarden.nl/api/API-Strategie) specificatie versie van 20200204 en is opgesteld in [OpenAPI Specificatie](https://www.forumstandaardisatie.nl/standaard/openapi-specification) (OAS) v3.  Het standaard mediatype HAL (`application/hal+json`) wordt gebruikt. Dit is een mediatype voor het weergeven van resources en hun relaties via hyperlinks.  Deze API is vooral gericht op individuele bevragingen (op basis van de identificerende gegevens van een object). Om gebruik te kunnen maken van de BAG API is een API key nodig, deze kan verkregen worden door het [aanvraagformulier](https://formulieren.kadaster.nl/aanvraag_bag_api_individuele_bevragingen_productie) in te vullen.  Voor vragen, neem contact op met de LVBAG beheerder o.v.v. BAG API 2.0. We zijn aan het kijken naar een geschikt medium hiervoor, mede ook om de API iteratief te kunnen opstellen of doorontwikkelen samen met de community. Als de API iets (nog) niet kan, wat u wel graag wilt, neem dan contact op.
 *
 * OpenAPI spec version: 2.9.2
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.54
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Kadaster\BagApiClient;

use PHPUnit\Framework\TestCase;

/**
 * NummeraanduidingTest Class Doc Comment
 *
 * @category    Class
 * @description Een Nummeraanduiding is een door het bevoegde gemeentelijke orgaan als  zodanig toegekende aanduiding van een verblijfsobject, een standplaats of  een ligplaats.  **status**: De fase van de levenscyclus van een nummeraanduiding, waarin de  betreffende nummeraanduiding zich bevindt.  **geconstateerd**: Een aanduiding waarmee kan worden aangegeven dat een  object in de registratie is opgenomen als gevolg van een feitelijke  constatering, zonder dat er op het moment van opname sprake was van een  regulier brondocument voor deze opname.  **voorkomen**: De toestand van een object in de administratieve  werkelijkheid, zoals beschreven met de eigenschappen van dit object waarover  gegevens geregistreerd worden, waarbij de gegevens gedurende een bepaalde  periode gelijk zijn in de (basis) registratie.  **ligtIn**: Een nummeraanduiding ligt in een woonplaats. Als een object in een andere woonplaats ligt dan de openbare ruimte waaraan  de nummeraanduiding ligt, dan wordt hier de identificatie van de woonplaats  ingevuld waar de nummeraanduiding in ligt. In alle andere gevallen wordt de  identificatie van de woonplaats ingevuld waar de openbare ruimte in ligt.  **ligtAan**: Een nummeraanduiding ligt aan een openbare ruimte. Deze property bevat de identificatie van de openbare ruimte waar de  nummeraanduiding aan ligt.
 * @package     Kadaster\BagApiClient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class NummeraanduidingTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "Nummeraanduiding"
     */
    public function testNummeraanduiding()
    {
    }

    /**
     * Test attribute "identificatie"
     */
    public function testPropertyIdentificatie()
    {
    }

    /**
     * Test attribute "domein"
     */
    public function testPropertyDomein()
    {
    }

    /**
     * Test attribute "huisnummer"
     */
    public function testPropertyHuisnummer()
    {
    }

    /**
     * Test attribute "huisletter"
     */
    public function testPropertyHuisletter()
    {
    }

    /**
     * Test attribute "huisnummertoevoeging"
     */
    public function testPropertyHuisnummertoevoeging()
    {
    }

    /**
     * Test attribute "postcode"
     */
    public function testPropertyPostcode()
    {
    }

    /**
     * Test attribute "type_adresseerbaar_object"
     */
    public function testPropertyTypeAdresseerbaarObject()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "geconstateerd"
     */
    public function testPropertyGeconstateerd()
    {
    }

    /**
     * Test attribute "documentdatum"
     */
    public function testPropertyDocumentdatum()
    {
    }

    /**
     * Test attribute "documentnummer"
     */
    public function testPropertyDocumentnummer()
    {
    }

    /**
     * Test attribute "voorkomen"
     */
    public function testPropertyVoorkomen()
    {
    }

    /**
     * Test attribute "ligt_in"
     */
    public function testPropertyLigtIn()
    {
    }

    /**
     * Test attribute "ligt_aan"
     */
    public function testPropertyLigtAan()
    {
    }
}
